{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"customization/","text":"Customize Parameters \u00b6 /gatsby-config.js \u00b6 Site Title and Link \u00b6 Find the following content, and change it to what you want. siteMetadata : { title : 'Running page' , siteUrl : 'https://mfydev.run' , description : 'MFYDev Running Page' , }, /src/utils/const.js \u00b6 Language \u00b6 Switch between Chinese and English by modifying IS_CHINESE ( true or false ) parameter. Mapbox Token \u00b6 Suggested changing to your own Mapbox token const MAPBOX_TOKEN = 'Your Own Mapbox Token' ; Avatar \u00b6 Modify export const AVATAR = 'Your Avatar link'; Replace it with the image link you want. NAV Bar \u00b6 Change NAVS to the links you want, just like: export const NAVS = [ { text : 'Running' , link : 'https://mfydev.run' }, { text : 'About' , link : 'https://github.com/mfydev' }, ]; You can add more links, just like the above.","title":"Customization"},{"location":"customization/#customize-parameters","text":"","title":"Customize Parameters"},{"location":"customization/#gatsby-configjs","text":"","title":"/gatsby-config.js"},{"location":"customization/#site-title-and-link","text":"Find the following content, and change it to what you want. siteMetadata : { title : 'Running page' , siteUrl : 'https://mfydev.run' , description : 'MFYDev Running Page' , },","title":"Site Title and Link"},{"location":"customization/#srcutilsconstjs","text":"","title":"/src/utils/const.js"},{"location":"customization/#language","text":"Switch between Chinese and English by modifying IS_CHINESE ( true or false ) parameter.","title":"Language"},{"location":"customization/#mapbox-token","text":"Suggested changing to your own Mapbox token const MAPBOX_TOKEN = 'Your Own Mapbox Token' ;","title":"Mapbox Token"},{"location":"customization/#avatar","text":"Modify export const AVATAR = 'Your Avatar link'; Replace it with the image link you want.","title":"Avatar"},{"location":"customization/#nav-bar","text":"Change NAVS to the links you want, just like: export const NAVS = [ { text : 'Running' , link : 'https://mfydev.run' }, { text : 'About' , link : 'https://github.com/mfydev' }, ]; You can add more links, just like the above.","title":"NAV Bar"},{"location":"deployment/","text":"Deploy Your Running Page in Various Platforms \u00b6 Linux Server \u00b6 Recommend System: Ubuntu 20.04 LTS Requirements: Nginx or any other web servers; Python Environments (Anaconda is recommended); Nodejs (14) and Yarn (1.22.10 stable); Steps: Point your domain to your server; Set your website root to /public folder; Use Anaconda create a Python environment with any name you want; Follow the guide in Installation Part; Done. Have fun with your Running Page! Github Pages \u00b6 If you are using a custom domain for GitHub Pages, open .github/workflows/gh-pages.yml , change fqdn to the domain of your site; ( Skip this step if you're **NOT* using a custom domain*) Modify gatsby-config.js , change pathPrefix to the root path. If the repository name is running_page , the value will be /running_page ; Modify arguments in run_data_sync.yml ; Change env to your own app type and info; Add your secret in repo Settings > Secrets (add only the ones you need); My secret is as follows Add your GitHub secret and have the same name as the GitHub secret in your project; Go to repository's Actions -> Workflows -> All Workflows , run Data Sync workflow first; After that done, choose Publish GitHub Pages from the left panel, click Run workflow . Make sure the workflow runs without errors, and gh-pages branch is created; Go to repository's Settings -> GitHub Pages -> Source , choose Branch: gh-pages , click Save . Then all done. Enjoy running! Vercel \u00b6 Connect Vercel to your GitHub repo; Import repo; Awaiting completion of deployment; Done. Enjoy Running! Cloudflare Pages \u00b6 Click Create a project in Pages to connect to your Repo; After clicking Begin setup , modify Project's Build settings ; Select Framework preset to Gatsby ; Scroll down, click Environment variables , input the variable below: Variable name = PYTHON_VERSION , Value = 3.7 Click Save and Deploy .","title":"Deployment"},{"location":"deployment/#deploy-your-running-page-in-various-platforms","text":"","title":"Deploy Your Running Page in Various Platforms"},{"location":"deployment/#linux-server","text":"Recommend System: Ubuntu 20.04 LTS Requirements: Nginx or any other web servers; Python Environments (Anaconda is recommended); Nodejs (14) and Yarn (1.22.10 stable); Steps: Point your domain to your server; Set your website root to /public folder; Use Anaconda create a Python environment with any name you want; Follow the guide in Installation Part; Done. Have fun with your Running Page!","title":"Linux Server"},{"location":"deployment/#github-pages","text":"If you are using a custom domain for GitHub Pages, open .github/workflows/gh-pages.yml , change fqdn to the domain of your site; ( Skip this step if you're **NOT* using a custom domain*) Modify gatsby-config.js , change pathPrefix to the root path. If the repository name is running_page , the value will be /running_page ; Modify arguments in run_data_sync.yml ; Change env to your own app type and info; Add your secret in repo Settings > Secrets (add only the ones you need); My secret is as follows Add your GitHub secret and have the same name as the GitHub secret in your project; Go to repository's Actions -> Workflows -> All Workflows , run Data Sync workflow first; After that done, choose Publish GitHub Pages from the left panel, click Run workflow . Make sure the workflow runs without errors, and gh-pages branch is created; Go to repository's Settings -> GitHub Pages -> Source , choose Branch: gh-pages , click Save . Then all done. Enjoy running!","title":"Github Pages"},{"location":"deployment/#vercel","text":"Connect Vercel to your GitHub repo; Import repo; Awaiting completion of deployment; Done. Enjoy Running!","title":"Vercel"},{"location":"deployment/#cloudflare-pages","text":"Click Create a project in Pages to connect to your Repo; After clicking Begin setup , modify Project's Build settings ; Select Framework preset to Gatsby ; Scroll down, click Environment variables , input the variable below: Variable name = PYTHON_VERSION , Value = 3.7 Click Save and Deploy .","title":"Cloudflare Pages"},{"location":"installation/","text":"Installation \u00b6 Download \u00b6 Clone or fork the repo. git clone https://github.com/yihong0618/running_page.git Installation requiements and test \u00b6 pip3 install -r requirements.txt yarn install yarn develop Open your browser and visit http://localhost:8000/ Build Static Site \u00b6 When all arguments are correctly set in the following guide, then you can build static site. yarn build All static files will be in /public folder now.","title":"Installation"},{"location":"installation/#installation","text":"","title":"Installation"},{"location":"installation/#download","text":"Clone or fork the repo. git clone https://github.com/yihong0618/running_page.git","title":"Download"},{"location":"installation/#installation-requiements-and-test","text":"pip3 install -r requirements.txt yarn install yarn develop Open your browser and visit http://localhost:8000/","title":"Installation requiements and test"},{"location":"installation/#build-static-site","text":"When all arguments are correctly set in the following guide, then you can build static site. yarn build All static files will be in /public folder now.","title":"Build Static Site"},{"location":"overview/","text":"How it works \u00b6","title":"Overview"},{"location":"overview/#how-it-works","text":"","title":"How it works"},{"location":"total-display/","text":"Generate SVG Total Data Display \u00b6 Display Demo Preview\uff1a \u00b6 {Your Name} Running {Your Name} Running in Every Year Over {Num}KM Running Year Circular SVG Generate {Your Name} Running SVG \u00b6 python scripts/gen_svg.py --from-db --title \"${{ env.TITLE }}\" --type github --athlete \"${{ env.ATHLETE }}\" --special-distance 10 --special-distance2 20 --special-color yellow --special-color2 red --output assets/github.svg --use-localtime --min-distance 0.5 Generate Every Year's {Your Name} Running SVG \u00b6 python scripts / gen_svg . py -- from - db -- year $ ( date + \"%Y\" ) -- title \"$(date +\" % Y \") Running\" -- type github -- athlete \"${{ env.ATHLETE }}\" -- special - distance 10 -- special - distance2 20 -- special - color yellow -- special - color2 red -- output assets / github_ $ ( date + \"%Y\" ) . svg -- use - localtime -- min - distance 0.5 Generate Over {Num}KM Running SVG \u00b6 python scripts/gen_svg.py --from-db --title \"${{ env.TITLE_GRID }}\" --type grid --athlete \"${{ env.ATHLETE }}\" --output assets/grid.svg --min-distance 10.0 --special-color yellow --special-color2 red --special-distance 20 --special-distance2 40 --use-localtime Generate Year Circular SVG \u00b6 python3(python) scripts/gen_svg.py --from-db --type circular --use-localtime For more display effects, please refer to: https://github.com/flopp/GpxTrackPoster","title":"Generate Total Page"},{"location":"total-display/#generate-svg-total-data-display","text":"","title":"Generate SVG Total Data Display"},{"location":"total-display/#display-demo-preview","text":"{Your Name} Running {Your Name} Running in Every Year Over {Num}KM Running Year Circular SVG","title":"Display Demo Preview\uff1a"},{"location":"total-display/#generate-your-name-running-svg","text":"python scripts/gen_svg.py --from-db --title \"${{ env.TITLE }}\" --type github --athlete \"${{ env.ATHLETE }}\" --special-distance 10 --special-distance2 20 --special-color yellow --special-color2 red --output assets/github.svg --use-localtime --min-distance 0.5","title":"Generate {Your Name} Running SVG"},{"location":"total-display/#generate-every-years-your-name-running-svg","text":"python scripts / gen_svg . py -- from - db -- year $ ( date + \"%Y\" ) -- title \"$(date +\" % Y \") Running\" -- type github -- athlete \"${{ env.ATHLETE }}\" -- special - distance 10 -- special - distance2 20 -- special - color yellow -- special - color2 red -- output assets / github_ $ ( date + \"%Y\" ) . svg -- use - localtime -- min - distance 0.5","title":"Generate  Every Year's {Your Name} Running SVG"},{"location":"total-display/#generate-over-numkm-running-svg","text":"python scripts/gen_svg.py --from-db --title \"${{ env.TITLE_GRID }}\" --type grid --athlete \"${{ env.ATHLETE }}\" --output assets/grid.svg --min-distance 10.0 --special-color yellow --special-color2 red --special-distance 20 --special-distance2 40 --use-localtime","title":"Generate Over {Num}KM Running SVG"},{"location":"total-display/#generate-year-circular-svg","text":"python3(python) scripts/gen_svg.py --from-db --type circular --use-localtime For more display effects, please refer to: https://github.com/flopp/GpxTrackPoster","title":"Generate Year Circular SVG"},{"location":"user-demo/","text":"Runner page App shaonianche https://run.duangfei.org Nike yihong0618 https://yihong.run/running Nike MFYDev https://mfydev.run Strava geekplux https://activities.geekplux.com Nike ben_29 https://running.ben29.xyz Strava superleeyom https://running.leeyom.top Nike guanlan https://grun.vercel.app Strava tuzimoe https://run.tuzi.moe Nike kcllf https://running-tau.vercel.app Garmin-cn mq https://running-iota.vercel.app Keep zhaohongxuan https://running-page-psi.vercel.app Keep yvetterowe https://run.haoluo.io Strava love-exercise https://run.kai666666.top Keep zstone12 https://running-page.zstone12.vercel.app Keep Lax https://lax.github.io/running Keep lusuzi https://running.lusuzi.vercel.app Nike wh1994 https://run4life.fun Garmin liuyihui https://run.foolishfox.cn Keep FrankSun https://hi-franksun.github.io/running_page Nike AhianZhang https://running.ahianzhang.com Keep L1cardo https://run.licardo.cn Nike luckylele666 https://0000928.xyz Strava","title":"Runner's Page Demo"},{"location":"FAQ/data-is-not-correct/","text":"Why the data displays in the Running Page is not mine? \u00b6 Related Issues: \u4e3a\u4ec0\u4e48\u90e8\u7f72\u6210\u529f\u4e4b\u540e\uff0c\u672c\u5e74\u6570\u636e\u662f\u6211\u81ea\u5df1\uff0ctotal\u91cc\u5c55\u793a\u7684\u6570\u636e\u662fyihong\u7684\u5462\uff1f\u6211\u7528\u7684keep \u00b7 Issue #132 \u00b7 yihong0618/running_page (github.com) \u672c\u5730\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u83b7\u53d6Nike run club\u7684\u6570\u636e\u7684\u65f6\u5019\uff0c\u4f1a\u5939\u6742\u7740\u522b\u7684\u4eba\u7684\u6570\u636e \u00b7 Issue #131 \u00b7 yihong0618/running_page (github.com) \u4f60\u597d\uff0c\u90e8\u7f72\u5230 GitHub Pages\u7684\uff0c\u6709\u4e9b\u914d\u7f6e\u7684\u73af\u5883\u53d8\u91cf\u6ca1\u6709\u89e3\u6790\u51fa\u6765\uff0c\u662f\u4ec0\u4e48\u5730\u65b9\u914d\u7f6e\u6709\u95ee\u9898\u5417\uff1f \u00b7 Issue #133 \u00b7 yihong0618/running_page Answer: When this happens, the fastest way to tackle with this problem is purging /scripts/data.db & /src/static/activities.json , then run the data sync again. If it is like issue #133 , you need to ensure that you have set the variables correctly according to the guide in Delopyment and run the data sync workflow with no errors before you publish it with Github Pages.","title":"The data is not mine?"},{"location":"FAQ/data-is-not-correct/#why-the-data-displays-in-the-running-page-is-not-mine","text":"Related Issues: \u4e3a\u4ec0\u4e48\u90e8\u7f72\u6210\u529f\u4e4b\u540e\uff0c\u672c\u5e74\u6570\u636e\u662f\u6211\u81ea\u5df1\uff0ctotal\u91cc\u5c55\u793a\u7684\u6570\u636e\u662fyihong\u7684\u5462\uff1f\u6211\u7528\u7684keep \u00b7 Issue #132 \u00b7 yihong0618/running_page (github.com) \u672c\u5730\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u83b7\u53d6Nike run club\u7684\u6570\u636e\u7684\u65f6\u5019\uff0c\u4f1a\u5939\u6742\u7740\u522b\u7684\u4eba\u7684\u6570\u636e \u00b7 Issue #131 \u00b7 yihong0618/running_page (github.com) \u4f60\u597d\uff0c\u90e8\u7f72\u5230 GitHub Pages\u7684\uff0c\u6709\u4e9b\u914d\u7f6e\u7684\u73af\u5883\u53d8\u91cf\u6ca1\u6709\u89e3\u6790\u51fa\u6765\uff0c\u662f\u4ec0\u4e48\u5730\u65b9\u914d\u7f6e\u6709\u95ee\u9898\u5417\uff1f \u00b7 Issue #133 \u00b7 yihong0618/running_page Answer: When this happens, the fastest way to tackle with this problem is purging /scripts/data.db & /src/static/activities.json , then run the data sync again. If it is like issue #133 , you need to ensure that you have set the variables correctly according to the guide in Delopyment and run the data sync workflow with no errors before you publish it with Github Pages.","title":"Why the data displays in the Running Page is not mine?"},{"location":"FAQ/github-camo/","text":"Why Github displays my SVG images as broken when they are quoted, while the origin is fine? \u00b6 Please refer to About anonymized URLs - GitHub Docs If the origin is fine, you can Removing an image from Camo's cache by running the following command: $ curl -X PURGE https://camo.githubusercontent.com/4d04abe0044d94fefcf9af2133223.... > { \"status\" : \"ok\" , \"id\" : \"216-8675309-1008701\" }","title":"Github displays error when quote the SVGs"},{"location":"FAQ/github-camo/#why-github-displays-my-svg-images-as-broken-when-they-are-quoted-while-the-origin-is-fine","text":"Please refer to About anonymized URLs - GitHub Docs If the origin is fine, you can Removing an image from Camo's cache by running the following command: $ curl -X PURGE https://camo.githubusercontent.com/4d04abe0044d94fefcf9af2133223.... > { \"status\" : \"ok\" , \"id\" : \"216-8675309-1008701\" }","title":"Why Github displays my SVG images as broken when they are quoted, while the origin is fine?"},{"location":"FAQ/matomo/","text":"How to add Matomo Analytics code to the header of Running Page? \u00b6 You can find Gatsby Matomo Plugin here: gatsby-plugin-matomo | Gatsby (gatsbyjs.com) Here is the Github Repo of this plugin: kremalicious/gatsby-plugin-matomo: \ud83e\udd42 Gatsby plugin to add Matomo (formerly Piwik) onto a site. (github.com) According to the Usage section, you should install this plugin to your project's root: cd yourproject/ npm i gatsby-plugin-matomo Then load the plugin from /gatsby-config.js and set the required variables: Warning You should add these code to the end of the plugins block. Please do not forget to add comma if you need. plugins: [ { resolve: 'gatsby-plugin-matomo' , options: { siteId: 'YOUR_SITE_ID' , matomoUrl: 'https://YOUR_MATOMO_URL.COM' , siteUrl: 'https://YOUR_LIVE_SITE_URL.COM' } } ]","title":"How to add Matomo Analytics code?"},{"location":"FAQ/matomo/#how-to-add-matomo-analytics-code-to-the-header-of-running-page","text":"You can find Gatsby Matomo Plugin here: gatsby-plugin-matomo | Gatsby (gatsbyjs.com) Here is the Github Repo of this plugin: kremalicious/gatsby-plugin-matomo: \ud83e\udd42 Gatsby plugin to add Matomo (formerly Piwik) onto a site. (github.com) According to the Usage section, you should install this plugin to your project's root: cd yourproject/ npm i gatsby-plugin-matomo Then load the plugin from /gatsby-config.js and set the required variables: Warning You should add these code to the end of the plugins block. Please do not forget to add comma if you need. plugins: [ { resolve: 'gatsby-plugin-matomo' , options: { siteId: 'YOUR_SITE_ID' , matomoUrl: 'https://YOUR_MATOMO_URL.COM' , siteUrl: 'https://YOUR_LIVE_SITE_URL.COM' } } ]","title":"How to add Matomo Analytics code to the header of Running Page?"},{"location":"FAQ/quote-svg-pictures/","text":"How can I quote the generated SVG pictures in other webistes? \u00b6 Related Issues: \u4e0d\u6253\u5305 svg \u81f3 js \u00b7 Issue #106 \u00b7 yihong0618/running_page (github.com) Due to some reasons, when you build the static websites, the SVG pictures won't be copied to the /public folder, which means that if you chose to host Running Page on your own server, it is impossible to quote it. The Solution is quite simple. You just need to copy them from /assets to /public/static folder. You can do it manually, or using one command line. Example: cp -r ./assets/* ./public/static If you are using Github Pages, follow this feat: add copy svg copy command by Mayandev \u00b7 Pull Request #130 \u00b7 yihong0618/running_page (github.com) is also a great way.","title":"Wanna quote the SVGs in other site?"},{"location":"FAQ/quote-svg-pictures/#how-can-i-quote-the-generated-svg-pictures-in-other-webistes","text":"Related Issues: \u4e0d\u6253\u5305 svg \u81f3 js \u00b7 Issue #106 \u00b7 yihong0618/running_page (github.com) Due to some reasons, when you build the static websites, the SVG pictures won't be copied to the /public folder, which means that if you chose to host Running Page on your own server, it is impossible to quote it. The Solution is quite simple. You just need to copy them from /assets to /public/static folder. You can do it manually, or using one command line. Example: cp -r ./assets/* ./public/static If you are using Github Pages, follow this feat: add copy svg copy command by Mayandev \u00b7 Pull Request #130 \u00b7 yihong0618/running_page (github.com) is also a great way.","title":"How can I quote the generated SVG pictures in other webistes?"},{"location":"FAQ/svgtopng/","text":"How can I convert the Running Page's SVG to PNG? \u00b6 You can use inkscape Install inkscape sudo add-apt-repository ppa:inkscape.dev/stable sudo apt-get update sudo apt install inkscape Then run commands like this: inkscape -w ` num ` -h ` num ` /path/to/your/svg -o /output/path/of/the/png For more information about how to use inkscape , please refer to: Learn | Inkscape","title":"I want to convert SVG to PNG"},{"location":"FAQ/svgtopng/#how-can-i-convert-the-running-pages-svg-to-png","text":"You can use inkscape Install inkscape sudo add-apt-repository ppa:inkscape.dev/stable sudo apt-get update sudo apt install inkscape Then run commands like this: inkscape -w ` num ` -h ` num ` /path/to/your/svg -o /output/path/of/the/png For more information about how to use inkscape , please refer to: Learn | Inkscape","title":"How can I convert the Running Page's SVG to PNG?"},{"location":"sync-data/garmin/","text":"Sync Your Own Garmin Data \u00b6 Note If you only want to sync type running add argument --only-run python3 ( python ) scripts / garmin_sync . py $ { your email } $ { your password } example\uff1a python3 ( python ) scripts / garmin_sync . py example @gmail . com password","title":"Garmin"},{"location":"sync-data/garmin/#sync-your-own-garmin-data","text":"Note If you only want to sync type running add argument --only-run python3 ( python ) scripts / garmin_sync . py $ { your email } $ { your password } example\uff1a python3 ( python ) scripts / garmin_sync . py example @gmail . com password","title":"Sync Your Own Garmin Data"},{"location":"sync-data/garmincn/","text":"Sync Your Own Garmin-CN Data \u00b6 Note If you only want to sync type running add argument --only-run python3 ( python ) scripts / garmin_sync . py $ { your email } $ { your password } -- is - cn example\uff1a python3 ( python ) scripts / garmin_sync . py example @gmail . com password -- is - cn","title":"Garmin (CN)"},{"location":"sync-data/garmincn/#sync-your-own-garmin-cn-data","text":"Note If you only want to sync type running add argument --only-run python3 ( python ) scripts / garmin_sync . py $ { your email } $ { your password } -- is - cn example\uff1a python3 ( python ) scripts / garmin_sync . py example @gmail . com password -- is - cn","title":"Sync Your Own Garmin-CN Data"},{"location":"sync-data/gpx/","text":"Sync Your Own GPX Data \u00b6 Copy all your gpx files to /GPX_OUT , then run the following command: python3 ( python ) scripts / gpx_sync . py","title":"GPX"},{"location":"sync-data/gpx/#sync-your-own-gpx-data","text":"Copy all your gpx files to /GPX_OUT , then run the following command: python3 ( python ) scripts / gpx_sync . py","title":"Sync Your Own GPX Data"},{"location":"sync-data/nike/","text":"Get Your Own Nike Run Club Data \u00b6 Warning When you choose to deploy Running Page on your own server, due to Nike has blocked some IDC's IP band, maybe your server cannot sync Nike Run Club's data correctly and display 403 error , then you have to change another way to host it. Get Nike's refresh_token Log in to Nike website Look for refresh_token in Develop -> Application-> Storage -> https:unite.nike.com Execute in the root directory: python3 ( python ) scripts / nike_sync . py $ { nike refresh_token } example\uff1a python3 ( python ) scripts / nike_sync . py eyJhbGciThiMTItNGIw ******","title":"Nike Run Club"},{"location":"sync-data/nike/#get-your-own-nike-run-club-data","text":"Warning When you choose to deploy Running Page on your own server, due to Nike has blocked some IDC's IP band, maybe your server cannot sync Nike Run Club's data correctly and display 403 error , then you have to change another way to host it. Get Nike's refresh_token Log in to Nike website Look for refresh_token in Develop -> Application-> Storage -> https:unite.nike.com Execute in the root directory: python3 ( python ) scripts / nike_sync . py $ { nike refresh_token } example\uff1a python3 ( python ) scripts / nike_sync . py eyJhbGciThiMTItNGIw ******","title":"Get Your Own Nike Run Club Data"},{"location":"sync-data/niketostrava/","text":"Sync Your Own Nike Run Club Data to Strava \u00b6 Follow the steps in Nike and Strava; Execute in the root directory: python3 ( python ) scripts / nike_to_strava_sync . py $ { nike_refresh_token } $ { client_id } $ { client_secret } $ { strava_refresch_token } example\uff1a python3 ( python ) scripts / nike_to_strava_sync . py eyJhbGciThiMTItNGIw ****** xxx xxx xxx","title":"Nike to Strava"},{"location":"sync-data/niketostrava/#sync-your-own-nike-run-club-data-to-strava","text":"Follow the steps in Nike and Strava; Execute in the root directory: python3 ( python ) scripts / nike_to_strava_sync . py $ { nike_refresh_token } $ { client_id } $ { client_secret } $ { strava_refresch_token } example\uff1a python3 ( python ) scripts / nike_to_strava_sync . py eyJhbGciThiMTItNGIw ****** xxx xxx xxx","title":"Sync Your Own Nike Run Club Data to Strava"},{"location":"sync-data/strava/","text":"Get Your Own Strava Data \u00b6 Sign in to Strava ; Go to Strava Developers -> Create & Manage Your App Create My API Application : Enter the information Warning The items in the red box are required. And the Authorization Callback Domain must be localhost . Created successfully\uff1a Use the link below to request all permissions: Replace ${your_id} in the link with My API Application Client ID https://www.strava.com/oauth/authorize?client_id=${your_id}&response_type=code&redirect_uri=http://localhost/exchange_token&approval_prompt=force&scope=read_all,profile:read_all,activity:read_all,profile:write,activity:write Get the code value in the link example\uff1a http://localhost/exchange_token?state=&code=1dab37edd9970971fb502c9efdd087f4f3471e6e&scope=read,activity:write,activity:read_all,profile:write,profile:read_all,read_all code value\uff1a 1dab37edd9970971fb502c9efdd087f4f3471e6 Use Client_id \u3001 Client_secret \u3001 Code get refresch_token : Execute in Terminal/iTerm curl -X POST https://www.strava.com/oauth/token \\ -F client_id=${Your Client ID} \\ -F client_secret=${Your Client Secret} \\ -F code=${Your Code} \\ -F grant_type=authorization_code example\uff1a curl -X POST https://www.strava.com/oauth/token \\ -F client_id=12345 \\ -F client_secret=b21******d0bfb377998ed1ac3b0 \\ -F code=d09******b58abface48003 \\ -F grant_type=authorization_code Sync Strava data python3 ( python ) scripts / strava_sync . py $ { client_id } $ { client_secret } $ { refresch_token } References \u00b6 https://developers.strava.com/docs/getting-started https://github.com/barrald/strava-uploader https://github.com/strava/go.strava","title":"Strava"},{"location":"sync-data/strava/#get-your-own-strava-data","text":"Sign in to Strava ; Go to Strava Developers -> Create & Manage Your App Create My API Application : Enter the information Warning The items in the red box are required. And the Authorization Callback Domain must be localhost . Created successfully\uff1a Use the link below to request all permissions: Replace ${your_id} in the link with My API Application Client ID https://www.strava.com/oauth/authorize?client_id=${your_id}&response_type=code&redirect_uri=http://localhost/exchange_token&approval_prompt=force&scope=read_all,profile:read_all,activity:read_all,profile:write,activity:write Get the code value in the link example\uff1a http://localhost/exchange_token?state=&code=1dab37edd9970971fb502c9efdd087f4f3471e6e&scope=read,activity:write,activity:read_all,profile:write,profile:read_all,read_all code value\uff1a 1dab37edd9970971fb502c9efdd087f4f3471e6 Use Client_id \u3001 Client_secret \u3001 Code get refresch_token : Execute in Terminal/iTerm curl -X POST https://www.strava.com/oauth/token \\ -F client_id=${Your Client ID} \\ -F client_secret=${Your Client Secret} \\ -F code=${Your Code} \\ -F grant_type=authorization_code example\uff1a curl -X POST https://www.strava.com/oauth/token \\ -F client_id=12345 \\ -F client_secret=b21******d0bfb377998ed1ac3b0 \\ -F code=d09******b58abface48003 \\ -F grant_type=authorization_code Sync Strava data python3 ( python ) scripts / strava_sync . py $ { client_id } $ { client_secret } $ { refresch_token }","title":"Get Your Own Strava Data"},{"location":"sync-data/strava/#references","text":"https://developers.strava.com/docs/getting-started https://github.com/barrald/strava-uploader https://github.com/strava/go.strava","title":"References"}]}